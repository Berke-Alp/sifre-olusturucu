<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>